---
title: "Wages"
format: html
editor: visual
---

```{r}
library(tidyverse)
refactored_wages <- wages <- read_csv("~/Wages/data/wages.csv")

skimr::skim(wages)
```

# Exploratory Data Analysis

```{r}
head(wages)
```

```{r}
# wages by occupation
wages |> 
  group_by(occupation, gender) |> 
  summarize(avg_wage = mean(wage)) |> 
  ggplot(aes(reorder(occupation, avg_wage), avg_wage, colour = occupation)) +
  geom_boxplot() +
  labs(
    x = "Average Wage",
    y = "Occupation",
    title = "Bar Plot Showing the Average Wages Per Occupation"
  )
```

```{r}
#wages by gender
wages |> 
  group_by(gender, occupation) |> 
  summarize(avg_wage = mean(wage)) |> 
  ggplot(aes(reorder(gender, avg_wage), avg_wage, colour = gender)) +
  geom_boxplot() +
  labs(
    x = "Average Wage",
    y = "Gender",
    title = "Bar Plot Showing the Average Wages Per Gender"
  )

```

```{r}

#wages by sector
wages |> 
  group_by(sector, gender) |> 
  summarize(avg_wage = mean(wage)) |> 
  ggplot(aes(reorder(sector, avg_wage), avg_wage, colour = sector)) +
  geom_boxplot() +
  labs(
    x = "Average Wage",
    y = "Sector",
    title = "Bar Plot Showing the Average Wages Per Sector"
  )

```

```{r}

#wages by ethnicity
wages |> 
  group_by(gender, ethnicity) |> 
  summarize(avg_wage = mean(wage)) |> 
  ggplot(aes(reorder(ethnicity, avg_wage), avg_wage, colour = ethnicity)) +
  geom_boxplot() +
  labs(
    x = "Average Wage",
    y = "Ethnicity",
    title = "Bar Plot Showing the Average Wages Per ethnicity"
  )

```

```{r}
#wages by married
wages |> 
  group_by(gender, married) |> 
  summarize(avg_wage = mean(wage)) |> 
  ggplot(aes(reorder(married, avg_wage), avg_wage, colour = married)) +
  geom_boxplot() +
  labs(
    x = "Average Wage",
    y = "married",
    title = "Bar Plot Showing the Average Wages Per married"
  )
```

```{r}
#correlation between numeric variables 
library(corrr)
wages_cor <- wages |> 
  select(1:4) |> 
  correlate()
wages_cor
```

```{r}
rplot(wages_cor)
```

# Statistical Analysis

```{r}
#t-test on married workers
t.test(wage ~ married, data = wages)
```

```{r}
#t-test on gender
t.test(wage ~ gender, data = wages)
```

```{r}
#t-test on region
t.test(wage ~ region, data = wages)
```


```{r}
#anova on ethnicity
summary(aov(wage ~ ethnicity, data = wages))
```

```{r}
#anova on occupation
summary(aov(wage ~ occupation, data = wages))
```
```{r}
#anova on sector
summary(aov(wage ~ sector, data = wages))
```

# SEM Analysis
```{r}
#sem data cleaning
refactored_wages$gender <- recode(refactored_wages$gender, 
                                  female = 0, 
                                  male = 1)
refactored_wages$ethnicity <- recode(refactored_wages$ethnicity, 
                                     hispanic = 1, 
                                     cauc = 2,
                                     other = 3)
refactored_wages$region <- recode(refactored_wages$region, 
                                     other = 1, 
                                     south = 2)
refactored_wages$occupation <- recode(refactored_wages$occupation, 
                                     worker = 1, 
                                     management = 2,
                                     sales = 3,
                                     office = 4,
                                     services = 5,
                                     technical = 6)
refactored_wages$sector <- recode(refactored_wages$sector, 
                                     manufacturing = 1, 
                                     other= 2,
                                     construction = 3)
refactored_wages$married <- recode(refactored_wages$married, 
                                     no = 0, 
                                     yes = 1)
refactored_wages$union <- recode(refactored_wages$union, 
                                     no = 0, 
                                     yes = 1)

```

```{r}
wages
```

```{r}
# Install and load the 'lavaan' package
library(lavaan)

# Define the SEM model with 'wage' as the dependent variable and 'education', 'experience', 'age', 'ethnicity', 'region', 'gender', 'occupation', 'sector', and 'married' as the independent variables
model <- ' wage ~ education + experience + ethnicity + region + gender + occupation + sector + married'

# Fit the SEM model to the data
fit <- sem(model, data = refactored_wages)

summary(fit)

fitmeasures(fit)

```

